# Even Fibonacci numbers
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

def problem2(x):
    f = []
    # for i in range(x):
    #    f.append(0)
    total = 0
    for i in range(0, x):
        f.append(1)
        if i == 0:
            f[i] = 0
        if f[i] % 2 == 0:
            total += f[i]
            continue
        if i == 1:
            f[i] = 1
        if f[i] % 2 == 0:
            total += f[i]
            continue
        f[i] = f[i - 1] + f[i - 2]
        if f[i] > x:
            break
        if f[i] % 2 == 0:
            total += f[i]
    return total


print(problem2(4000000))